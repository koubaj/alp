import math

numbers = ["one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen ", "nineteen ", "twenty ", "thirty ", "forty ", "fifty ", "sixty ", "seventy ", "eighty ", "ninety ", "hundred ", "thousand ", "million ", "billion ", "trillion ", "quadrillion "]


def find_error(numbers, num):
    if num.isnumeric():
        return False
    for i in num:
        if i not in numbers:
            return True


def to_text(numbres, num):
    out = ""
    
    n = []
    for i in range(len(num) - 3, -1, -3):
        n.append(num[i:min(i+3, len(num))])
    if len(num)%3 != 0:
        n.append(num[0:len(num)%3])
    n = n[::-1]

    for count, i in enumerate(n):
        i = i[::-1]
        added = False
        
        if len(i) == 3 and i[2] != '0':
            out += numbers[int(i[2]) - 1] + numbers[27]
            added = True
        if len(i) >= 2 and int(i[1]) < 2:
            if int(i[1] + i[0]) != 0:
                out += numbers[int(i[1] + i[0]) - 1]
                added = True
        else:
            if len(i) >= 2:
                out += numbers[int(i[1]) + 17]
                added = True
            if i[0] != "0":
                out += numbers[int(i[0]) - 1]
                added = True

        if added and count < len(n) - 1:
            out += numbers[32 - (6 - math.ceil(len(num) / 3)) - count]

    return out

def to_num(numbers, num):
    out = ""


    return out


num = str(input())
if find_error:
    print("ERROR")
    quit()
if num.isnumeric():
    print(to_text(numbers, num))
else:
    print(to_num(numbers, num))
